---

---

<div class="modal" id="js-modal">
  <button class="modal__sp-btn c-visible-nrw" id="js-modal-close" aria-hidden="true">
    &times;
  </button>
</div>
<div class="modal-bg js-modal-bg"></div>

<style lang="scss">
    .modal {
      @include accAnim;
      @include absCenter;
      background-color: rgba(0, 0, 0, 0);
      visibility: hidden;
      opacity: 0;
      z-index: 999;
      position: fixed;
      width: 100svw;
  
      &.-active {
        visibility: visible;
        opacity: 1;
      }
  
      .works__txt {
          position: relative;
      }
      
      @include mq(sp) {
        // top: 0;
        overflow-y: scroll;
        height: 100vh;
        
      }
    }
    .modal-bg {
        @include absCenter();
        @include accAnim;
        background: rgba(0, 0, 0, .6);
        backdrop-filter: blur(12px);
        -webkit-backdrop-filter: blur(12px);
        position: fixed;
        width: 100svw;
        height: 100svh;
        z-index: 100;
        visibility: hidden;
        opacity: 0;

        &.-active {
            visibility: visible;
            opacity: 1;
        }
    }
    .modal__sp-btn {
      position: absolute;
      color: white;
      font-size: calRem(48);
      right: calRem(8);
      top: calc(4rem / 2 - 2rem);
      line-height: 1;
      filter: drop-shadow(0 0 8px rgba(255, 255, 255, .8));
      z-index: 999;
    }
</style>
<script>
  const $btns = document.querySelectorAll(".js-modal-btn");
  const body = document.getElementsByTagName("body");
  const modalNode = document.getElementById("js-modal");
  const $bg = document.querySelector(".js-modal-bg");
  const $closeBtn = document.getElementById("js-modal-close");
  let isActive = false;

  $btns.forEach((el) => {
    el.addEventListener("click", (e) => {
      // console.log(e.currentTarget);
      const modal = e.currentTarget.querySelector(".js-modal");
      let clone = modal.cloneNode(true);

      //   console.log(clone);

      if (!isActive) { //モーダルがアクティブでないとき
        modalNode.appendChild(clone); //DOM挿入
        modalNode.classList.toggle("-active");
        $bg?.classList.add("-active");
        isActive = !isActive;

        // modalNode.querySelector(".js-modal-bg").addEventListener("click", () => {
        //     //イベントリスナーは複製されないので改めて設定
        //     modalNode.classList.toggle("-active");
        //     body[0].classList.toggle("-modal");

        //     setTimeout(()=> {
        //       modalNode.firstElementChild.remove();
        //         isActive = !isActive;
        //     }, 405);            //アニメーションを待ってからDOM削除
        //   });
      } else {
        modalNode.classList.toggle("-active");
        isActive = !isActive;
      }

      body[0].classList.toggle("-modal");
    });
  });

  $bg.addEventListener("click", (e) => {

      modalNode.classList.remove("-active");
      e.target.classList.remove("-active");

      setTimeout(()=> {
        modalNode.querySelector(".js-modal").remove();
          isActive = !isActive;
      }, 405);            //アニメーションを待ってからDOM削除
      //   const modal = e.closest(".js-modal");
      // console.log(modal);
      // console.log(e.currentTarget);

      //   modal.classList.toggle("-active");
    body[0].classList.remove("-modal");
  });

  $closeBtn.addEventListener("click", () => {
    console.log($closeBtn);

      modalNode.classList.remove("-active");
      $bg.classList.remove("-active");

      setTimeout(()=> {
        modalNode.querySelector(".js-modal").remove();
          isActive = !isActive;
      }, 405);            //アニメーションを待ってからDOM削除
      //   const modal = e.closest(".js-modal");
      // console.log(modal);
      // console.log(e.currentTarget);

      //   modal.classList.toggle("-active");
    body[0].classList.remove("-modal");
  });
</script>
